{"remainingRequest":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Kartovitskii/Desktop/Project/f5/testtask.git/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/src/App.vue","mtime":1564350705683},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import url('https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i&display=swap&subset=cyrillic');\n* { font-family: 'Roboto', sans-serif; color: #000;}\n#app {\n \n}\n#newtimerButton {\nposition: absolute;\nwidth: 130px;\nheight: 130px;\nleft: -20px;\ntop: -30px;\nbackground: #00FFA3;\nborder-radius: 130px;\ncursor: pointer;\n/**/\ntext-align: center;\nline-height: 130px;\n}\n#newtimerButton:before {\n    font-size: 50px;\n   /* position: relative;\n    left: 55px;\n    top: 45px; */\n    content: '+';\n    font-weight: 200;\n}\n#newtimerButton:hover {\nbackground: rgb(0, 179, 113); \n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n  <div @click=\"NewTimer\" id=\"newtimerButton\"></div>\n      <timer \n      v-bind:TimersArray=\"TimersArray\" \n      @OpenClose = \"OpenCloseModal\"\n      />\n      <modal \n      v-for=\"Timer of TimersArray\" \n      v-bind:Timer=\"Timer\" \n      v-bind:key=\"Timer.ids\" \n      @StartTimer=\"StartTimer\" \n      @InvSave=\"InvSave\" \n      @InvBoolean = \"InvBoolean\"\n      @InvTextTimerH = \"InvTextTimerH\"\n      @InvTextTimerM = \"InvTextTimerM\"\n      @InvTextTimerS = \"InvTextTimerS\"\n      @TimerStop = \"TimerStop\"\n      @OpenCloseModal = \"OpenCloseModal\"\n      />\n  </div>\n</template>\n\n<script>\nimport timer from '@/components/TimerOnGrid' \nimport modal from '@/components/TimerModal'\n\nexport default {\n  name: 'app',\n  data() {\n    return {\n      TimersArray: [\n        {ids: 0,  ModalBo: true, timername:  'Новый таймер', buttonname: 'Старт', hText: '00', mText: '00', sText: '00', h: 0, m: 0, s: 0, timer: null, isActive: false, typeTimer: false, ActiveTextTimerH: false, ActiveTextTimerM: false, ActiveTextTimerS: false},\n        {ids: 1,  ModalBo: true, timername:  'Новый таймер', buttonname: 'Старт', hText: '00', mText: '00', sText: '00', h: 0, m: 0, s: 0, timer: null, isActive: false, typeTimer: false, ActiveTextTimerH: false, ActiveTextTimerM: false, ActiveTextTimerS: false}\n      ],\n    }\n  },\n  components: {\n    timer, modal\n  },\n  methods: {\n    NewTimer() {\n      this.TimersArray.push({ids: this.TimersArray.length, ModalBo: true, timername:  'Новый таймер', buttonname: 'Старт', hText: '00', mText: '00', sText: '00', h: 0, m: 0, s: 0, timer: null, isActive: false, typeTimer: false, ActiveTextTimerH: false, ActiveTextTimerM: false, ActiveTextTimerS: false})\n      this.TimersArray[this.TimersArray.length-1].ModalBo =! this.TimersArray[this.TimersArray.length-1].ModalBo\n    },\n    OpenCloseModal(ids) {\n       this.TimersArray[ids].ModalBo =! this.TimersArray[ids].ModalBo\n    },\n     TimerStop(ids) {\n            this.TimersArray[ids].buttonname = 'Старт';\n            clearInterval(this.TimersArray[ids].timer);\n        },\n     InvTextTimerH(ids){\n        if (this.TimersArray[ids].h != 0) {\n            document.getElementById(ids+'liGrid').style.border=\"none\"\n            }\n       var idFocus = this.TimersArray[ids].ids+'hInp'\n            this.TimersArray[ids].ActiveTextTimerH =! this.TimersArray[ids].ActiveTextTimerH; \n              setTimeout(function ()\n            {\n               document.getElementById(idFocus).focus();\n            }, 0);\n            if (this.TimersArray[ids].ActiveTextTimerH) this.TimerStop(ids);\n            this.TimersArray[ids].h = Number(this.TimersArray[ids].h);\n            this.TimersArray[ids].hText = this.TimersArray[ids].h<10?'0'+this.TimersArray[ids].h:this.TimersArray[ids].h;\n          },\n          InvTextTimerM(ids){\n            if (this.TimersArray[ids].m != 0) {\n            document.getElementById(ids+'liGrid').style.border=\"none\"\n            }\n            var idFocus = this.TimersArray[ids].ids+'mInp'\n            this.TimersArray[ids].ActiveTextTimerM =! this.TimersArray[ids].ActiveTextTimerM\n           setTimeout(function ()\n            {\n                document.getElementById(idFocus).focus();\n            }, 0);\n            if (this.TimersArray[ids].ActiveTextTimerM) this.TimerStop(ids);\n            this.TimersArray[ids].m = Number(this.TimersArray[ids].m);\n            this.TimersArray[ids].mText = this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n          if (this.TimersArray[ids].m > 59) {\n             alert(\"Число не может быть больше 59!\")\n             this.TimersArray[ids].m = 0\n             this.TimersArray[ids].mText = '00'\n           }\n          },\n          InvTextTimerS(ids){\n            if (this.TimersArray[ids].s != 0) {\n            document.getElementById(ids+'liGrid').style.border=\"none\"\n            }\n            var idFocus = this.TimersArray[ids].ids+'sInp'\n            this.TimersArray[ids].ActiveTextTimerS =! this.TimersArray[ids].ActiveTextTimerS\n           setTimeout(function ()\n            {\n                document.getElementById(idFocus).focus();\n            }, 0);\n            if (this.TimersArray[ids].ActiveTextTimerS) this.TimerStop(ids);\n            this.TimersArray[ids].s = Number(this.TimersArray[ids].s);\n            this.TimersArray[ids].sText = this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n                     if (this.TimersArray[ids].s > 59) {\n             alert(\"Число не может быть больше 59!\")\n             this.TimersArray[ids].s = 0\n             this.TimersArray[ids].sText = '00'\n           }\n          },\n    InvBoolean(ids) {\n       this.TimersArray[ids].isActive =! this.TimersArray[ids].isActive\n        setTimeout(function ()\n            {\n               document.getElementById('ID'+ids).focus();\n            }, 0);\n    },\n        InvSave(ids){\n            if (this.TimersArray[ids].timername=='') {\n            alert('Нельзя оставлять поле пустым')\n           this.TimersArray[ids].timername='Новый таймер'\n            }\n        },\n      StartTimer(ids) {\n        document.getElementById(ids+'liGrid').style.border=\"none\"\n         if (this.TimersArray[ids].buttonname == 'Старт') {\n                this.TimersArray[ids].buttonname = 'Стоп';\n                if (this.TimersArray[ids].typeTimer==false) {\n                  document.getElementById(ids+'TGrid').style.color=\"#00FFA3\"\n                  document.getElementById(ids+'TGridName').style.color=\"#00FFA3\"\n          this.TimersArray[ids].timer = setInterval(() => {\n                if (this.TimersArray[ids].s<59) {\n                   this.TimersArray[ids].s++\n                   this.TimersArray[ids].sText =this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n                } else {\n                   this.TimersArray[ids].m++\n                   this.TimersArray[ids].mText =this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n                   this.TimersArray[ids].s = 0;\n                   this.TimersArray[ids].sText =this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n                }\n                if (this.TimersArray[ids].m>59) {\n                   this.TimersArray[ids].h++\n                   this.TimersArray[ids].hText =this.TimersArray[ids].h<10?'0'+this.TimersArray[ids].h:this.TimersArray[ids].h;\n                   this.TimersArray[ids].m = 0;\n                   this.TimersArray[ids].mText =this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n                }\n            }, 1000) \n            } else {\n              document.getElementById(ids+'TGrid').style.color=\"red\"\n              document.getElementById(ids+'TGridName').style.color=\"red\"\n                   this.TimersArray[ids].timer = setInterval(() => {\n                        if (this.TimersArray[ids].s > 0) {\n                            this.TimersArray[ids].s--\n                            this.TimersArray[ids].sText = this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n                    } else if (this.TimersArray[ids].m > 0) {\n                        this.TimersArray[ids].m--;\n                        this.TimersArray[ids].mText = this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n                        this.TimersArray[ids].s = 59;\n                        this.TimersArray[ids].sText = this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n                    }\n                    else if (this.TimersArray[ids].h > 0) {\n                       this.TimersArray[ids].h--;\n                       this.TimersArray[ids].hText = this.TimersArray[ids].h<10?'0'+this.TimersArray[ids].h:this.TimersArray[ids].h;\n                        this.TimersArray[ids].m = 59;\n                        this.TimersArray[ids].mText = this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n                        this.TimersArray[ids].s = 59;\n                        this.TimersArray[ids].sText = this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n                    }\n                    else {\n                        this.TimerStop(ids);\n                         document.getElementById(ids+'liGrid').style.border=\"1px solid red\"\n                    }\n\n                      }, 1000); \n            } \n            } else {\n               this.TimerStop(ids);\n               document.getElementById(ids+'TGrid').style.color=\"#000\"\n               document.getElementById(ids+'TGridName').style.color=\"#000\"\n            }\n        },\n         OpenModal(ids) {\n                document.getElementById(ids).style.display = 'block'\n            }\n    }\n  }\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i&display=swap&subset=cyrillic');\n* { font-family: 'Roboto', sans-serif; color: #000;}\n#app {\n \n}\n#newtimerButton {\nposition: absolute;\nwidth: 130px;\nheight: 130px;\nleft: -20px;\ntop: -30px;\nbackground: #00FFA3;\nborder-radius: 130px;\ncursor: pointer;\n/**/\ntext-align: center;\nline-height: 130px;\n}\n#newtimerButton:before {\n    font-size: 50px;\n   /* position: relative;\n    left: 55px;\n    top: 45px; */\n    content: '+';\n    font-weight: 200;\n}\n#newtimerButton:hover {\nbackground: rgb(0, 179, 113); \n}\n</style>\n"]}]}