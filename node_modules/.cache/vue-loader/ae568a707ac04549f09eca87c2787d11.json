{"remainingRequest":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Kartovitskii/Desktop/Project/f5/testtask.git/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/src/App.vue","mtime":1564522169766},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import url('https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i&display=swap&subset=cyrillic');\n\n* {\n\tfont-family: 'Roboto', sans-serif;\n\tcolor: #000;\n}\nbody {\n  overflow-x: hidden;\n}\n#newtimerButton {\n\tposition: absolute;\n\twidth: 130px;\n\theight: 130px;\n\tleft: -20px;\n\ttop: -30px;\n\tbackground: #00FFA3;\n\tborder-radius: 130px;\n\tcursor: pointer;\n\ttext-align: center;\n\tline-height: 130px;\n}\n\n#newtimerButton:before {\n  /*\n  position: relative;\n  left: 55px;\n  top: 45px;\n  */\n\tfont-size: 50px;\n\tcontent: '+';\n\tfont-weight: 200;\n}\n\n#newtimerButton:hover {\n\tbackground: rgb(0, 179, 113);\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+OA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n  <div @click=\"NewTimer\" id=\"newtimerButton\"></div>\n\n    <timer \n    v-bind:TimersArray=\"TimersArray\" \n    @OpenClose = \"OpenCloseModal\"\n    />\n\n    <modal \n    v-for=\"Timer of TimersArray\" \n    v-bind:Timer=\"Timer\" \n    v-bind:key=\"Timer.ids\" \n    @StartTimer=\"StartTimer\" \n    @InvSave=\"InvSave\" \n    @InvBoolean = \"InvBoolean\"\n    @InvTextTimerH = \"InvTextTimerH\"\n    @InvTextTimerM = \"InvTextTimerM\"\n    @InvTextTimerS = \"InvTextTimerS\"\n    @TimerStop = \"TimerStop\"\n    @OpenCloseModal = \"OpenCloseModal\"\n    />\n\n    <reg />\n  </div>\n</template>\n\n\n\n\n<script>\n  import reg from '@/components/Reg.vue' \n  import timer from '@/components/TimerOnGrid' \n  import modal from '@/components/TimerModal'\n\n  export default {\n    name: 'app',\n    data() {\n      return {\n        TimersArray: [\n          {\n          ids: 0,  \n          ModalBo: true, \n          timername: 'Новый таймер', \n          buttonname: 'Старт', \n          hText: '00', \n          mText: '00', \n          sText: '00', \n          h: 0, \n          m: 0, \n          s: 0, \n          timer: null, \n          isActive: false, \n          typeTimer: false, \n          ActiveTextTimerH: false, \n          ActiveTextTimerM: false, \n          ActiveTextTimerS: false\n          }\n        ],\n      }\n    },\n    components: {\n      timer, modal, reg\n    },\n    methods: {\n      // Надо было изначально разбить методы и писать метод для каждого компонента в файле с компонентом, а не вот это вот все :(\n      NewTimer() {\n        this.TimersArray.push({\n          ids: this.TimersArray.length,\n          ModalBo: true,\n          timername:  'Новый таймер',\n          buttonname: 'Старт',\n          hText: '00',\n          mText: '00',\n          sText: '00',\n          h: 0,\n          m: 0,\n          s: 0,\n          timer: null,\n          isActive: false,\n          typeTimer: false,\n          ActiveTextTimerH: false,\n          ActiveTextTimerM: false,\n          ActiveTextTimerS: false\n        })\n        this.TimersArray[this.TimersArray.length-1].ModalBo =! this.TimersArray[this.TimersArray.length-1].ModalBo\n      },\n\n\n      OpenCloseModal(ids) {\n        this.TimersArray[ids].ModalBo =! this.TimersArray[ids].ModalBo\n      },\n\n\n      TimerStop(ids) {\n        this.TimersArray[ids].buttonname = 'Старт';\n        clearInterval(this.TimersArray[ids].timer);\n      },\n\n\n      InvTextTimerH(ids) {\n        if (this.TimersArray[ids].h != 0) {\n          document.getElementById(ids+'liGrid').style.border=\"none\"\n        }\n        var idFocus = this.TimersArray[ids].ids+'hInp'\n        this.TimersArray[ids].ActiveTextTimerH =! this.TimersArray[ids].ActiveTextTimerH; \n        setTimeout(function () {\n          document.getElementById(idFocus).focus();\n        }, 0);\n        if (this.TimersArray[ids].ActiveTextTimerH) this.TimerStop(ids);\n        this.TimersArray[ids].h = Number(this.TimersArray[ids].h);\n        this.TimersArray[ids].hText = this.TimersArray[ids].h<10?'0'+this.TimersArray[ids].h:this.TimersArray[ids].h;\n      },\n      \n      \n      InvTextTimerM(ids) {\n        if (this.TimersArray[ids].m != 0) {\n          document.getElementById(ids+'liGrid').style.border=\"none\"\n        }\n        var idFocus = this.TimersArray[ids].ids+'mInp'\n        this.TimersArray[ids].ActiveTextTimerM =! this.TimersArray[ids].ActiveTextTimerM\n        setTimeout(function () {\n          document.getElementById(idFocus).focus();\n          }, 0);\n        if (this.TimersArray[ids].ActiveTextTimerM) this.TimerStop(ids);\n        this.TimersArray[ids].m = Number(this.TimersArray[ids].m);\n        this.TimersArray[ids].mText = this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n        if (this.TimersArray[ids].m > 59) {\n          alert(\"Число не может быть больше 59!\")\n          this.TimersArray[ids].m = 0\n          this.TimersArray[ids].mText = '00'\n        }\n      },\n      \n      \n      InvTextTimerS(ids) {\n        if (this.TimersArray[ids].s != 0) {\n          document.getElementById(ids+'liGrid').style.border=\"none\"\n        }\n        var idFocus = this.TimersArray[ids].ids+'sInp'\n        this.TimersArray[ids].ActiveTextTimerS =! this.TimersArray[ids].ActiveTextTimerS\n        setTimeout(function () {\n          document.getElementById(idFocus).focus();\n        }, 0);\n        if (this.TimersArray[ids].ActiveTextTimerS) this.TimerStop(ids);\n        this.TimersArray[ids].s = Number(this.TimersArray[ids].s);\n        this.TimersArray[ids].sText = this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n        if (this.TimersArray[ids].s > 59) {\n          alert(\"Число не может быть больше 59!\")\n          this.TimersArray[ids].s = 0\n          this.TimersArray[ids].sText = '00'\n        }\n      },\n      \n      \n      InvBoolean(ids) {\n        this.TimersArray[ids].isActive =! this.TimersArray[ids].isActive\n        setTimeout(function () {\n          document.getElementById('ID'+ids).focus();\n        }, 0);\n      },\n      \n      \n      InvSave(ids) {\n        if (this.TimersArray[ids].timername=='') {\n          alert('Нельзя оставлять поле пустым')\n          this.TimersArray[ids].timername='Новый таймер'\n        }\n      },\n\n\n      StartTimer(ids) {\n        document.getElementById(ids+'liGrid').style.border=\"none\"\n        if (this.TimersArray[ids].buttonname == 'Старт') {\n          this.TimersArray[ids].buttonname = 'Стоп';\n          if (this.TimersArray[ids].typeTimer==false) {\n            document.getElementById(ids+'TGrid').style.color=\"#00FFA3\"\n            document.getElementById(ids+'TGridName').style.color=\"#00FFA3\"\n            this.TimersArray[ids].timer = setInterval(() => {\n              if (this.TimersArray[ids].s<59) {\n                this.TimersArray[ids].s++\n                this.TimersArray[ids].sText =this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n              } else {\n                this.TimersArray[ids].m++\n                this.TimersArray[ids].mText =this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n                this.TimersArray[ids].s = 0;\n                this.TimersArray[ids].sText =this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n              }\n              if (this.TimersArray[ids].m>59) {\n                this.TimersArray[ids].h++\n                this.TimersArray[ids].hText =this.TimersArray[ids].h<10?'0'+this.TimersArray[ids].h:this.TimersArray[ids].h;\n                this.TimersArray[ids].m = 0;\n                this.TimersArray[ids].mText =this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n              }\n            }, 1000) \n          } else {\n            document.getElementById(ids+'TGrid').style.color=\"red\"\n            document.getElementById(ids+'TGridName').style.color=\"red\"\n            this.TimersArray[ids].timer = setInterval(() => {\n              if (this.TimersArray[ids].s > 0) {\n                this.TimersArray[ids].s--\n                this.TimersArray[ids].sText = this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n              } else if (this.TimersArray[ids].m > 0) {\n                this.TimersArray[ids].m--;\n                this.TimersArray[ids].mText = this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n                this.TimersArray[ids].s = 59;\n                this.TimersArray[ids].sText = this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n              } else if (this.TimersArray[ids].h > 0) {\n                this.TimersArray[ids].h--;\n                this.TimersArray[ids].hText = this.TimersArray[ids].h<10?'0'+this.TimersArray[ids].h:this.TimersArray[ids].h;\n                this.TimersArray[ids].m = 59;\n                this.TimersArray[ids].mText = this.TimersArray[ids].m<10?'0'+this.TimersArray[ids].m:this.TimersArray[ids].m;\n                this.TimersArray[ids].s = 59;\n                this.TimersArray[ids].sText = this.TimersArray[ids].s<10?'0'+this.TimersArray[ids].s:this.TimersArray[ids].s;\n              } else {\n                this.TimerStop(ids);\n                document.getElementById(ids+'liGrid').style.border=\"1px solid red\"\n              }\n            }, 1000); \n          } \n        } else {\n          this.TimerStop(ids);\n          document.getElementById(ids+'TGrid').style.color=\"#000\"\n          document.getElementById(ids+'TGridName').style.color=\"#000\"\n        }\n      },\n      \n      \n      OpenModal(ids) {\n        document.getElementById(ids).style.display = 'block'\n      }\n    }\n  }\n</script>\n\n\n\n\n<style>\n@import url('https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i&display=swap&subset=cyrillic');\n\n* {\n\tfont-family: 'Roboto', sans-serif;\n\tcolor: #000;\n}\nbody {\n  overflow-x: hidden;\n}\n#newtimerButton {\n\tposition: absolute;\n\twidth: 130px;\n\theight: 130px;\n\tleft: -20px;\n\ttop: -30px;\n\tbackground: #00FFA3;\n\tborder-radius: 130px;\n\tcursor: pointer;\n\ttext-align: center;\n\tline-height: 130px;\n}\n\n#newtimerButton:before {\n  /*\n  position: relative;\n  left: 55px;\n  top: 45px;\n  */\n\tfont-size: 50px;\n\tcontent: '+';\n\tfont-weight: 200;\n}\n\n#newtimerButton:hover {\n\tbackground: rgb(0, 179, 113);\n}\n</style>"]}]}