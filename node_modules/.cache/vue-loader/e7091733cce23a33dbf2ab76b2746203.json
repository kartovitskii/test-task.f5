{"remainingRequest":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Kartovitskii/Desktop/Project/f5/testtask.git/src/components/Reg.vue?vue&type=template&id=3f487494&scoped=true&","dependencies":[{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/src/components/Reg.vue","mtime":1564852085644},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Kartovitskii/Desktop/Project/f5/testtask.git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"hrefModal\", attrs: { id: \"hrefMod\" } }, [\n      _c(\"div\", { staticClass: \"regBg\" }, [\n        _vm._v(\"\\n            Регистрация\\n        \")\n      ]),\n      _c(\"div\", { staticClass: \"contentreg\" }, [\n        _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"E-mail\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.email,\n              expression: \"email\"\n            }\n          ],\n          attrs: { id: \"email\" },\n          domProps: { value: _vm.email },\n          on: {\n            blur: function($event) {\n              return _vm.test(_vm.email)\n            },\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.email = $event.target.value\n            }\n          }\n        }),\n        _c(\"label\", { attrs: { for: \"phone\" } }, [\n          _vm._v(\"Phone number \" + _vm._s(\"(\" + this.country_name + \")\"))\n        ]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.phone,\n              expression: \"phone\"\n            }\n          ],\n          attrs: { id: \"phone\" },\n          domProps: { value: _vm.phone },\n          on: {\n            blur: function($event) {\n              return _vm.numberTest(_vm.phone)\n            },\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.phone = $event.target.value\n            }\n          }\n        }),\n        _c(\"label\", { attrs: { for: \"pass\" } }, [_vm._v(\"Password\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.pass,\n              expression: \"pass\"\n            }\n          ],\n          attrs: { type: \"password\", id: \"pass\" },\n          domProps: { value: _vm.pass },\n          on: {\n            blur: function($event) {\n              return _vm.passTest(_vm.pass)\n            },\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.pass = $event.target.value\n            }\n          }\n        }),\n        _c(\"label\", { attrs: { for: \"confpass\" } }, [\n          _vm._v(\"Confirm Password\")\n        ]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.confpass,\n              expression: \"confpass\"\n            }\n          ],\n          attrs: { type: \"password\", id: \"confpass\" },\n          domProps: { value: _vm.confpass },\n          on: {\n            blur: function($event) {\n              return _vm.confPassTest(_vm.confpass)\n            },\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.confpass = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", { attrs: { type: \"checkbox\", id: \"accept\", hidden: \"\" } }),\n        _c(\"label\", { attrs: { for: \"accept\" } }, [\n          _vm._v(\"I accept privacy policy and it so cool\")\n        ]),\n        _c(\"div\", { staticClass: \"btnModalSection\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"buttonModal dsbl\",\n              attrs: { id: \"butSubscr\" },\n              on: {\n                click: function($event) {\n                  return _vm.send()\n                }\n              }\n            },\n            [_vm._v(\"Subscribe\\n         \"), _vm._m(0)]\n          )\n        ])\n      ])\n    ]),\n    _c(\"div\", {\n      staticClass: \"substrate\",\n      attrs: { id: \"subst\" },\n      on: { click: _vm.CloseRegModal }\n    }),\n    _c(\"div\", { staticClass: \"hrefreg\", on: { click: _vm.OpenRegModal } }, [\n      _vm._v(\"\\n        Открыть форму регистрации\\n    \")\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"descr\", attrs: { id: \"descr\" } }, [\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"Заполните пустые поля и исправьте ошибки, если таковые появятся в процессе заполнения\"\n          )\n        ]),\n        _c(\n          \"li\",\n          {\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"emailValidAlert\" }\n          },\n          [_vm._v(\"Вы ввели невалидный email или оставили поле пустым\")]\n        ),\n        _c(\n          \"li\",\n          {\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"emailDisposableAlert\" }\n          },\n          [_vm._v(\"Введенный вами email недоступен\")]\n        ),\n        _c(\n          \"li\",\n          {\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"emailScoreAlert\" }\n          },\n          [_vm._v(\"Рейтинг вашего email не подходит для данного сайта\")]\n        ),\n        _c(\n          \"li\",\n          {\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"phoneValidAlert\" }\n          },\n          [_vm._v(\"Вы ввели невалидный телефон или оставили поле пустым\")]\n        ),\n        _c(\n          \"li\",\n          {\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"passAcceptAlert\" }\n          },\n          [\n            _vm._v(\n              \"Пароль введенный в поле подтверждения пароля не совпадает с ранее введенным паролем.\"\n            )\n          ]\n        ),\n        _c(\n          \"li\",\n          { staticStyle: { display: \"none\" }, attrs: { id: \"passTypeAlert\" } },\n          [\n            _vm._v(\n              \"В пароле должно быть минимум 6 символов, 1 спецсимвол (!@#$%^&*(),.), 1 заглавная буква, 2 цифры, недопустимо использование букв подряд, недоспустимо использование цифр подряд\"\n            )\n          ]\n        )\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}